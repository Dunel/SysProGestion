generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  alcaldia
  estudiante
  dependencia
}

model Coderegister {
  id        String   @id @default(cuid())
  code      Int
  mail      String   @unique
  updatedAt DateTime @updatedAt
}

model PreRegister {
  id        Int      @id @default(autoincrement())
  cedula    Int      @unique
  mail      String   @unique
  role      Role     @default(estudiante)
  updatedAt DateTime @updatedAt
}

model User {
  id          Int            @id @default(autoincrement())
  cedula      Int            @unique
  mail        String         @unique
  password    String
  names       String
  lastnames   String
  role        Role           @default(estudiante)
  phone       String
  updatedAt   DateTime       @updatedAt
  profile     Boolean        @default(false)
  esInfo      estudentInfo[]
  apply       apply[]
  application application[]
}

enum Skills {
  resoluciondeproblemas
  trabajoenequipo
  adaptabilidad
  comunicacionefectiva
  liderazgo
  pensamientocritico
  orientacionaresultados
  creatividad
  gestiondeltiempo
  aprendizajecontinuo
  dondegente
  ensenanza
  sociable
  salud
  deportes
  logistica
  expresionesartisticas
  diseno
  musica
  ingles
  otrosidiomasnaturales
  lenguajesdeprogramacion
}

model estudentInfo {
  id          Int      @id @default(autoincrement())
  userCedula  Int      @unique
  university  String
  quarter     Int
  skills      Skills[]
  interests   String
  description String
  address     String
  updatedAt   DateTime @updatedAt
  User        User     @relation(fields: [userCedula], references: [cedula], onDelete: Cascade)
}

model application {
  id          Int      @id @default(autoincrement())
  userCedula  Int
  title       String
  description String
  location    String
  status      status   @default(active)
  updatedAt   DateTime @updatedAt
  apply       apply[]
  User        User     @relation(fields: [userCedula], references: [cedula])
}

enum status {
  active
  inactive
}

model apply {
  id            Int         @id @default(autoincrement())
  userCedula    Int
  applicationId Int
  status        statusApply @default(pendiente)
  updatedAt     DateTime    @updatedAt
  application   application @relation(fields: [applicationId], references: [id], onDelete: Cascade)
  User          User        @relation(fields: [userCedula], references: [cedula], onDelete: Cascade)
}

enum statusApply {
  pendiente
  aceptado
  rechazado
}
